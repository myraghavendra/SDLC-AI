
# .github/workflows/test-backend.yml
name: Test Backend (Python/FastAPI)

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/test-backend.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx  # For testing

      - name: Create test .env file
        run: |
          echo "OPENAI_API_KEY=test_key_for_ci" >> .env
          echo "JIRA_API_TOKEN=test_token" >> .env
          echo "JIRA_PROJECT_KEY=TEST" >> .env
          echo "JIRA_URL=https://test.atlassian.net" >> .env
          echo "JIRA_USER=test@example.com" >> .env

      - name: Test backend startup
        run: |
          # Start the server in background
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8000/health || {
            echo "Health check failed"
            kill $SERVER_PID
            exit 1
          }
          
          echo "âœ… Backend is working correctly!"
          
          # Clean up
          kill $SERVER_PID
        env:
          OPENAI_API_KEY: "test_key_for_ci"
          JIRA_API_TOKEN: "test_token"
          JIRA_PROJECT_KEY: "TEST"
          JIRA_URL: "https://test.atlassian.net"
          JIRA_USER: "test@example.com"

      - name: Run tests (if you have them)
        run: |
          # Uncomment if you have pytest tests
          # pytest tests/ -v
          echo "Add your tests here"