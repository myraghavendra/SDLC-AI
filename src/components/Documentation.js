"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const Header_1 = __importDefault(require("./Header")); // Adjust import path if needed
const Footer_1 = __importDefault(require("./Footer")); // Adjust import path if needed
/**
 * Documentation Component
 * Comprehensive explanation of the workspace, project structure, and features.
 */
const Documentation = () => ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Header_1.default, {}), (0, jsx_runtime_1.jsxs)("div", { style: { padding: '2rem', fontFamily: 'sans-serif' }, children: [(0, jsx_runtime_1.jsx)("h1", { children: "Project Documentation" }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Project Overview" }), (0, jsx_runtime_1.jsx)("p", { children: "This workspace is a full-stack SDLC (Software Development Life Cycle) agent dashboard for managing requirements, user stories, test cases, and defect analytics. It uses a modern React + TypeScript frontend and a Node.js/Express backend, with Python microservices for integrations (e.g., Jira)." })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Tech Stack" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "npm:" }), " Manages project dependencies and scripts."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "React:" }), " Builds interactive user interfaces using components."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "TypeScript:" }), " Adds type safety to JavaScript, reducing runtime errors."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Node.js/Express:" }), " Backend API and server logic."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Python:" }), " Microservices for integrations (e.g., Jira)."] })] })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Workspace Structure" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "src/" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Frontend (React/TypeScript):" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "src/App.tsx" }), ": Main entry point."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "components/" }), ": Feature pages (e.g., ", (0, jsx_runtime_1.jsx)("code", { children: "RequirementAnalyserPage.tsx" }), ", ", (0, jsx_runtime_1.jsx)("code", { children: "DefectSummaryReportPage.tsx" }), ", ", (0, jsx_runtime_1.jsx)("code", { children: "IntegratedStory.tsx" }), "), infographics, and UI elements."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "backend/" }), " and ", (0, jsx_runtime_1.jsx)("code", { children: "backend_py/" }), ": Backend logic and Python integrations."] })] })] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Backend:" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "server.ts" }), " and ", (0, jsx_runtime_1.jsx)("code", { children: "server.js" }), ": Express API, including endpoints for OpenAI-powered story and criteria generation."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "jira_client.py" }), ": Async integration with Jira for story creation."] })] })] })] })] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Configuration:" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: ".env" }), ": Secrets and environment variables."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "tsconfig.json" }), ": TypeScript configuration."] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "vite.config.ts" }), ": Vite configuration."] })] })] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Testing & Coverage:" }), (0, jsx_runtime_1.jsx)("ul", { children: (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: ".pytest_cache" }), ", ", (0, jsx_runtime_1.jsx)("code", { children: "coverage" }), ": Test results and code coverage."] }) })] }), (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Scripts:" }), (0, jsx_runtime_1.jsx)("ul", { children: (0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("code", { children: "run-backend.sh" }), " and npm scripts in ", (0, jsx_runtime_1.jsx)("code", { children: "package.json" }), ": Starting servers and building the project."] }) })] })] })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Main Features" }), (0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)("li", { children: "Requirement analysis and gap/conflict detection." }), (0, jsx_runtime_1.jsx)("li", { children: "User story selection and generation." }), (0, jsx_runtime_1.jsx)("li", { children: "Automated test case generation for multiple frameworks." }), (0, jsx_runtime_1.jsx)("li", { children: "Defect analytics: summary, density, ageing, distribution, and root cause." }), (0, jsx_runtime_1.jsx)("li", { children: "Integration with Jira, Rally, TestRail, and Trello (some features are placeholders)." })] })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "How It Works" }), (0, jsx_runtime_1.jsxs)("ol", { children: [(0, jsx_runtime_1.jsx)("li", { children: "Users select a tool (e.g., Jira), fetch stories, and analyze requirements." }), (0, jsx_runtime_1.jsx)("li", { children: "AI generates user stories, acceptance criteria, and test cases." }), (0, jsx_runtime_1.jsx)("li", { children: "Defect data is visualized with rich infographics." }), (0, jsx_runtime_1.jsx)("li", { children: "Reports can be exported (PDF, ZIP)." })] })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Getting Started" }), (0, jsx_runtime_1.jsxs)("ol", { children: [(0, jsx_runtime_1.jsxs)("li", { children: ["Install dependencies: ", (0, jsx_runtime_1.jsx)("code", { children: "npm install" })] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Start development server: ", (0, jsx_runtime_1.jsx)("code", { children: "npm start" })] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Edit source files in ", (0, jsx_runtime_1.jsx)("code", { children: "src/" }), " and see changes live."] })] })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Why TypeScript?" }), (0, jsx_runtime_1.jsx)("p", { children: "TypeScript helps catch bugs early by enforcing types. For example, if you pass the wrong prop type to a component, you'll get a compile-time error." })] }), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Further Reading" }), (0, jsx_runtime_1.jsxs)("p", { children: ["For more details, see ", (0, jsx_runtime_1.jsx)("code", { children: "Documentation.tsx" }), " and feature pages in ", (0, jsx_runtime_1.jsx)("code", { children: "src/components" }), "."] })] })] }), (0, jsx_runtime_1.jsx)(Footer_1.default, {})] }));
exports.default = Documentation;
